services:
  nginx:
    init: true
    container_name: nginx
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    image: nginx-img
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    depends_on:
      - wordpress
    env_file: .env
    ports:
      - "443:443"
    restart: on-failure

  mariadb:
    container_name: mariadb
    build: 
      context: requirements/mariadb
      dockerfile: Dockerfile
    image: mariadb-img
    networks:
      - inception
    env_file: .env
    environment:
      - SQL_NAME_DATABASE=${SQL_NAME_DATABASE}
      - SQL_NAME_USER=${SQL_NAME_USER}
      - SQL_PASSWORD_USER=${SQL_PASSWORD_USER}
      - SQL_PASSWORD_ROOT=${SQL_PASSWORD_ROOT}
    volumes:
      - mariadb:/var/lib/mysql
    restart: on-failure
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysql"]
      interval: 20s
      timeout: 10s
      retries: 6
      start_period: 30s

  wordpress:
    container_name: wordpress
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    depends_on:
      mariadb:
        condition: service_healthy
    image: wordpress-img
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    env_file: .env
    environment:
      - SQL_NAME_DATABASE=${SQL_NAME_DATABASE}
      - SQL_NAME_USER=${SQL_NAME_USER}
      - SQL_PASSWORD_USER=${SQL_PASSWORD_USER}
      - SQL_PASSWORD_ROOT=${SQL_PASSWORD_ROOT}
    restart: on-failure
    ports:
      - "9000:9000"


volumes:
  wordpress:
    # driver: local
    # driver_opts:
    #   type: 'none'
    #   o: 'bind'
    #   device: '/Users/login/data/wordpress'
  mariadb:
    # driver: local
    # driver_opts:
    #   type: 'none'
    #   o: 'bind'
    #   device: '/Users/login/data/mariadb'

networks:
  inception:
    driver: bridge
